 " vimoutliner converter to markdown """"""""""""""""""""""""""{
 " vim: set foldmarker={,} foldlevel=0 foldmethod=marker :
 "            _____
 " ___   ____(_)______ ___
 " __ | / /_  /__  __ `__ \
 " __ |/ /_  / _  / / / / /
 " _____/ /_/  /_/ /_/ /_/
 "
 " Maintainer: ferko
 " Version: 0.5
 " Last Change: 2017-08-06 21:41:12 CEST
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""}

"----------------------------------------------
" Howto convert a VimOutliner file to Markdown?
"----------------------------------------------
"
" just use :call VO2MD() or :call MD2VO() as needed.
"
" Heading 1
"    Heading 2
"            Heading 3
"            : Body text is separated by colons.
"            : Another line of body text.
"    Heading 4
"
" ...into hash-style headings separated by an empty line like this:
"
" # Heading 1
"
" ## Heading 2
"
" ### Heading 3
"
" Body text.
"
" ## Heading 4

function! VO2MD()
  let lines = []
  let was_body = 0
  for line in getline(1,'$')
    if line =~ '^\t*[^:\t]'
      let indent_level = len(matchstr(line, '^\t*'))
      if was_body " <= remove this line to have body lines separated
        call add(lines, '')
      endif " <= remove this line to have body lines separated
      call add(lines, substitute(line, '^\(\t*\)\([^:\t].*\)', '\=repeat("#", indent_level + 1)." ".submatch(2)', ''))
      call add(lines, '')
      let was_body = 0
    else
      call add(lines, substitute(line, '^\t*: ', '', ''))
      let was_body = 1
    endif
  endfor
  silent %d _
  call setline(1, lines)
endfunction

function! MD2VO()
  let lines = []
  for line in getline(1,'$')
    if line =~ '^\s*$'
      continue
    endif
    if line =~ '^#\+'
      let indent_level = len(matchstr(line, '^#\+')) - 1
      call add(lines, substitute(line, '^#\(#*\) ', repeat("\<Tab>", indent_level), ''))
    else
      call add(lines, substitute(line, '^', repeat("\<Tab>", indent_level) . ': ', ''))
    endif
  endfor
  silent %d _
  call setline(1, lines)
endfunction
