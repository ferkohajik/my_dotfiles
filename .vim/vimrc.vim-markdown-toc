"1. g:vmt_auto_update_on_save
"   default: 1
"
"  This plugin will update existing table of contents on save automatic. " You can close this feature by add the following line to your vimrc file:
"
  let g:vmt_auto_update_on_save = 1
"
"
"2. g:vmt_dont_insert_fence
"   default: 0
"
"  By default, the :GenTocXXX commands will add <!-- vim-markdown-toc --> fence to the table of contents, it is designed for feature of auto update table of contents on save and :UpdateToc command, it won't effect what your Markdown file looks like after parse. If you don't like this, you can remove the fence by add the following line to your vimrc file:
"
  let g:vmt_dont_insert_fence = 1
"
"  But then you will lose the convenience of auto update tables of contents on save and :UpdateToc command. When you want to update toc, you need to remove existing toc manually and rerun :GenTocXXX commands.
"
"
"3. g:vmt_fence_text
"   default: vim-markdown-toc
"   Inner text of the fence marker for the table of contents, see g:vmt_dont_insert_fence.
"
  let g:vmt_fence_text = 'vim-markdown-toc'
"
"4. g:vmt_fence_closing_text
"   default: g:vmt_fence_text
"   Inner text of the closing fence marker. E.g., you could
"
  let g:vmt_fence_text = 'TOC'
"
" and
"
  let g:vmt_fence_closing_text = '/TOC'
"  to get
"
" <!-- TOC -->
" [TOC]
" <!-- /TOC -->
"
"
"5. g:vmt_fence_hidden_markdown_style
"   default: ''
"
"  By default, vim-markdown-toc will add the markdown style into the fence of the text for the table of contents. You can avoid this and set a default markdown style with g:vmt_fence_hidden_markdown_style that is applied if a fence is found containing the g:vmt_fence_text without any markdown style. Obviously, g:vmt_fence_hidden_markdown_style has to be supported, i.e. currently one of ['GFM', 'Redcarpet', 'GitLab', 'Marked'].
"
"
"6. g:vmt_cycle_list_item_markers
"   default: 0
"
"   By default, * is used to denote every level of a list:
"
"   * [Level 1](#level-1)
"       * [Level 1-1](#level-1-1)
"       * [Level 1-2](#level-1-2)
"           * [Level 1-2-1](#level-1-2-1)
"   * [Level 2](level-2)
"
"   If you set:
"
  let g:vmt_cycle_list_item_markers = 1
"
"   every level will instead cycle between the valid list item markers *, - and +:
"
"   * [Level 1](#level-1)
"       - [Level 1-1](#level-1-1)
"       - [Level 1-2](#level-1-2)
"          + [Level 1-2-1](#level-1-2-1)
"   * [Level 2](level-2)
"
"   This renders the same according to Markdown rules, but might appeal to those who care about readability of the source.
"
"7. g:vmt_list_item_char
"   default: *
"
"   The list item marker, it can be *, - or +.
"
"8. g:vmt_include_headings_before
"   default: 0
"
"   Include headings before the position you are inserting Table of Contents.
"
